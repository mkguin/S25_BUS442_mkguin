# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'FinancialPlanner.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 30, 211, 71))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 150, 221, 61))
        self.label_2.setObjectName("label_2")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(20, 240, 321, 91))
        self.checkBox.setObjectName("checkBox")

        #I beleive I'm missing this

        self.calculate_pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.calculate_pushButton.setGeometry(QtCore.QRect(120, 330, 181, 101))
        self.calculate_pushButton.setObjectName("calculate_pushButton")

        #Generates the code in def(calculate_performance)
        self.calculate_pushButton.clicked.connect(self.calculate_performance)

        self.clear_pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.clear_pushButton.setGeometry(QtCore.QRect(10, 460, 171, 81))
        self.clear_pushButton.setObjectName("clear_pushButton")

        #in class we added when clicked clears all
        self.clear_pushButton.clicked.connect(self.clear)

        self.exit_pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.exit_pushButton.setGeometry(QtCore.QRect(240, 460, 171, 81))
        self.exit_pushButton.setObjectName("exit_pushButton")

        #Exit button
        self.exit_pushButton.clicked.connect(self.exit)

        self.acinput = QtWidgets.QLineEdit(self.centralwidget)
        self.acinput.setGeometry(QtCore.QRect(260, 30, 211, 71))
        self.acinput.setObjectName("acinput")
        self.yearsinput = QtWidgets.QLineEdit(self.centralwidget)
        self.yearsinput.setGeometry(QtCore.QRect(260, 150, 211, 71))
        self.yearsinput.setObjectName("yearsinput")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(500, 20, 211, 531))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Annual Contribution"))
        self.label_2.setText(_translate("MainWindow", "Number of years"))
        self.checkBox.setText(_translate("MainWindow", "Retirement Plan 2050"))
        self.calculate_pushButton.setText(_translate("MainWindow", "Calculate"))
        self.clear_pushButton.setText(_translate("MainWindow", "Clear"))
        self.exit_pushButton.setText(_translate("MainWindow", "Exit"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Year"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Portfolio Balance"))

    #This connects to the exit button and makes it so the application exits
    def exit(self):
        application.exit()

    #This connects to the clear button and makes it so all of the forms clear
    def clear(self):
        self.acinput.clear()
        self.yearsinput.clear()
        self.checkBox.setChecked(False)  # set checkbox to be unchecked (False)

    #validate user's input
    def calculate_performance(self): #Shows msg if amount is empty
        if len(self.acinput.text()) == 0:
            msg = QtWidgets.QMessageBox()
            msg.setText("Please enter valid annual contribution amount.")
            msg.exec()
            return None

        elif len(self.yearsinput.text()) == 0: #Show msg if years is empty
            msg = QtWidgets.QMessageBox()
            msg.setText("Please enter valid numeber of years.")
            msg.exec()
            return None

        annual_amount = float(self.acinput.text())

        number_years = int(self.yearsinput.text())
        print(annual_amount, number_years)


        checkbox_status = self.checkBox.isChecked()
        print("Checkbox value: ", checkbox_status)

        rate_return = 0.0

        if checkbox_status:
            rate_return = 7.0
        else:
            rate_return = 0.0

        print("Rate of return ", rate_return)


        portfolio = 0.0

        for year in range(1, number_years+1):
            portfolio = (portfolio+annual_amount)*(1+rate_return/100)
            print(year, portfolio, annual_amount, rate_return)

            row = self.tableWidget.rowCount()
            print("Number of rows in the table widget: ", row)

            #Add a new row to table
            self.tableWidget.insertRow(row)

            #Add value in column 1 of newly created line
            self.tableWidget.setItem(row,0, QtWidgets.QTableWidgetItem(str(year)))
            self.tableWidget.setItem(row,1, QtWidgets.QTableWidgetItem(str(portfolio)))


if __name__ == '__main__':
    import sys
    application = QtWidgets.QApplication(sys.argv)
    form = QtWidgets.QMainWindow()
    user_interface = Ui_MainWindow()
    user_interface.setupUi(form)
    form.show()
    sys.exit(application.exec_())